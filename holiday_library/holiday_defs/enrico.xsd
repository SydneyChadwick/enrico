<?xml version="1.0" encoding="UTF-8"?>
<schema xmlns="http://www.w3.org/2001/XMLSchema" targetNamespace="https://kayaposoft.com/enrico/xsd/1.0" xmlns:tns="https://kayaposoft.com/enrico/xsd/1.0" elementFormDefault="qualified">

<element name="holidays">
	<annotation><documentation>
		Root element with list of holiday definitions.
	</documentation></annotation>
	<complexType>
		<sequence>
			<element name="metadata" type="tns:metadataType" minOccurs="0" />
			<element name="holiday" type="tns:holidayType" minOccurs="0" maxOccurs="unbounded" />
		</sequence>
		<attribute name="country" type="tns:countryType" use="required"/>
	</complexType>
</element>

<!-- element types -->
<complexType name="metadataType">
	<annotation><documentation>
		Metadata web page(s) with relevant holiday info.
	</documentation></annotation>
	<sequence>
		<element name="reference" type="anyURI" maxOccurs="unbounded" />
	</sequence>
</complexType>

<complexType name="holidayType">
	<annotation><documentation>
		Definition of one holiday.
	</documentation></annotation>
	<sequence>
		<element name="date" type="tns:dateType">
			<annotation><documentation>
				Date on which holiday takes place.
			</documentation></annotation>
		</element>
		<element name="dateTo" type="tns:dateType" minOccurs="0">
			<annotation><documentation>
				In case holiday takes place on more than 1 day, this is the last day of holiday duration. Previous element 'date' is the first day of holiday duration.
			</documentation></annotation>
		</element>
		<element name="if" type="tns:ifType" minOccurs="0" maxOccurs="unbounded">
			<annotation><documentation>
				Only if this condition is satisfied the holiday definition is valid.
			</documentation></annotation>
		</element>
		<element name="ifNot" type="tns:ifType" minOccurs="0" maxOccurs="unbounded">
			<annotation><documentation>
				Only if this condition is not satisfied the holiday definition is valid.
			</documentation></annotation>
		</element>
		<element name="name" type="tns:localizedStringType" maxOccurs="unbounded">
			<annotation><documentation>
				Name of the holiday. Names in all official languages in the country and English should be present here.
			</documentation></annotation>
		</element>
		<element name="observanceRule" type="tns:observanceRuleType" minOccurs="0" maxOccurs="unbounded">
			<annotation><documentation>
				Rules under which holiday can be observed on other day. E.g. If holiday falls on Sunday it is observed on the following Monday.
			</documentation></annotation>
		</element>
		<element name="flag" type="tns:holidayFlagType" minOccurs="0" maxOccurs="unbounded">
			<annotation><documentation>
				Additional flags which describes the holiday.
			</documentation></annotation>
		</element>
		<element name="note" type="tns:localizedStringType" minOccurs="0" maxOccurs="unbounded">
			<annotation><documentation>
				Additional notes which describes the holiday. Each note should be at least in English.
			</documentation></annotation>
		</element>
	</sequence>
	<attribute name="validFrom" type="date" use="required">
		<annotation><documentation>
			Date from which this holiday definition is valid. This does not have to be necessary the same as the start of holiday observation. In case we do not know when the holiday has started to be observed we set validFrom to date which we know for sure holiday was observed.
		</documentation></annotation>
	</attribute>
	<attribute name="validTo" type="date">
		<annotation><documentation>
			Date to which this holiday definition is valid. If omitted it means no end date.
		</documentation></annotation>
	</attribute>
	<attribute name="holidayType" type="tns:holidayTypeType" default="public_holiday">
		<annotation><documentation>
			Holiday type.
		</documentation></annotation>
	</attribute>
	<attribute name="frequency" type="string">
		<annotation><documentation>
			Holiday frequency. Must be in form e.g. '4%0' which means holiday occurs only in year when remainder after division of year by 4 is 0. Default value is '1%0' which means every year.
		</documentation></annotation>
	</attribute>
</complexType>

<complexType name="dateType">
	<choice>
		<element name="fixedDate" type="tns:fixedDateType" />
		<element name="specialDate" type="tns:specialDateType" />
		<element name="nthWeekdayRuleDate" type="tns:nthWeekdayRuleDateType" />
		<element name="dateTransformation" type="tns:dateTransformationType" />
	</choice>
</complexType>

<complexType name="fixedDateType">
	<annotation><documentation>
		Simplest date type. Example: holiday takes place on July 4.
	</documentation></annotation>
	<attribute name="day" type="tns:dayOfMonthType" use="required" />
	<attribute name="month" type="tns:monthType" use="required" />
</complexType>

<simpleType name="specialDateType">
	<annotation><documentation>
		Special date. Example: holiday takes place on Easter Sunday.
	</documentation></annotation>
    <restriction base="string">
		<enumeration value="EASTER_SUNDAY"/>
		<enumeration value="ORTHODOX_EASTER_SUNDAY"/>
		<enumeration value="CHINESE_MONTH_1ST_START"/>
		<enumeration value="CHINESE_MONTH_4TH_START"/>
		<enumeration value="CHINESE_MONTH_5TH_START"/>
		<enumeration value="CHINESE_MONTH_8TH_START"/>
		<enumeration value="CHINESE_MONTH_9TH_START"/>
		<enumeration value="HEBREW_MONTH_1ST_START"/>
		<enumeration value="HIJRI_MONTH_10TH_START"/>
		<enumeration value="HIJRI_MONTH_12TH_START"/>
		<enumeration value="MARCH_EQUINOX"/>
		<enumeration value="SEPTEMBER_EQUINOX"/>
		<enumeration value="FIRST_FULL_MOON_IN_MAY"/>
		<enumeration value="DEEPAVALI"/>
		<enumeration value="ADJUSTED_HIJRI_MONTH_10TH_START"/>
		<enumeration value="ADJUSTED_HIJRI_MONTH_12TH_START"/>
    </restriction>
</simpleType>

<complexType name="nthWeekdayRuleDateType">
	<annotation><documentation>
		For holiday dates in form: holiday takes place on second Monday in October.
	</documentation></annotation>
	<attribute name="dayOfWeek" type="tns:dayOfWeekType" use="required" />
	<attribute name="month" type="tns:monthType" use="required" />
	<attribute name="nth" type="tns:nthType" use="required" />
</complexType>

<complexType name="dateTransformationType">
	<annotation><documentation>
		Can be used to transform date to another date. Allows nesting of date transformations.
	</documentation></annotation>
	<sequence>
		<element name="baseDate" type="tns:dateType" />
		<choice>
			<element name="addDays" type="integer" />
			<element name="addSeconds" type="integer" />
			<element name="nearestWeekday" type="tns:nearestWeekdayType">
				<annotation><documentation>
					Get nearest e.g. Monday of baseDate. Nearest weekday can be before, on or after baseDate.
				</documentation></annotation>
			</element>
			<element name="nearestWeekdayAfter" type="tns:nearestWeekdayType">
				<annotation><documentation>
					Get nearest e.g. Monday after baseDate. Nearest weekday must be after baseDate, it cannot be equal to baseDate.
				</documentation></annotation>
			</element>
		</choice>
	</sequence>
</complexType>

<complexType name="nearestWeekdayType">
	<attribute name="dayOfWeek" type="tns:dayOfWeekType" use="required" />
</complexType>

<complexType name="ifType">
	<attribute name="dayOfWeek" type="tns:dayOfWeekType" use="required" />
</complexType>

<complexType name="observanceRuleType">
	<annotation><documentation>
		Rule under which holiday can be observed on other day. E.g. If holiday falls on Sunday (attribute dayOfWeek=7) it is observed on the following Monday (attribute addDays=1). Attribute addDays can contain also negative value. If parameter additionalHoliday is true additional holiday is created, otherwise observedOn date is added to the original holiday.
	</documentation></annotation>
	<attribute name="dayOfWeek" type="tns:dayOfWeekType" use="required" />
	<attribute name="addDays" type="integer" use="required" />
	<attribute name="additionalHoliday" type="boolean" use="required" />
</complexType>

<complexType name="localizedStringType">
	<simpleContent>
      <extension base="string">
        <attribute name="lang" type="language">
			<annotation><documentation>
				ISO 639-1 language code.
			</documentation></annotation>
		</attribute>
      </extension>
    </simpleContent>
</complexType>

<simpleType name="holidayFlagValueType">
	<annotation><documentation>
		SHOP_CLOSING_DAY - shops are closed on this day.
		REGIONAL_HOLIDAY - holiday does not take place in the whole country or region but only in some parts of it.
		ADDITIONAL_HOLIDAY - holiday is an additional holiday given probably because main holiday takes place on Saturday or Sunday.
		PART_DAY_HOLIDAY - holiday does not take place during the whole day.
	</documentation></annotation>
	<restriction base="string">
		<enumeration value="SHOP_CLOSING_DAY"/>
		<enumeration value="REGIONAL_HOLIDAY"/>
		<enumeration value="ADDITIONAL_HOLIDAY"/>
		<enumeration value="BANK_HOLIDAY"/>
		<enumeration value="PART_DAY_HOLIDAY"/>
	</restriction>
</simpleType>

<complexType name="holidayFlagType">  
	<simpleContent>  
		<extension base="tns:holidayFlagValueType">  
			<attribute name="validFrom" type="date" />
			<attribute name="validTo" type="date" />
		</extension>  
	</simpleContent>  
</complexType>

<!-- attribute types -->
<simpleType name="countryType">
	<restriction base="string">
		<length value="3"/>
	</restriction>
</simpleType>

<simpleType name="holidayTypeType">
	<annotation><documentation>
		public_holiday - public holiday.
		observance - observance, not a public holiday.
		school_holiday - school holiday.
		other_day - other important day. E.g. Mother's day, Father's day etc.
		extra_working_day - extra working day. This day takes place mostly on Saturday or Sunday and is substituted for extra public holiday so called bridge holiday.
		postal_holiday - holiday, during which no regular mail is delivered.
	</documentation></annotation>
	<restriction base="string">
		<enumeration value="public_holiday"/>
		<enumeration value="observance"/>
		<enumeration value="school_holiday"/>
		<enumeration value="other_day"/>
		<enumeration value="extra_working_day"/>
		<enumeration value="postal_holiday"/>
	</restriction>
</simpleType>

<simpleType name="dayOfMonthType">
	<restriction base="integer">
	  <minInclusive value="1"/>
	  <maxInclusive value="31"/>
	</restriction>
</simpleType>

<simpleType name="monthType">
	<annotation><documentation>
		January=1, February=2, ..., November=11, December=12
	</documentation></annotation>
	<restriction base="integer">
	  <minInclusive value="1"/>
	  <maxInclusive value="12"/>
	</restriction>
</simpleType>

<simpleType name="dayOfWeekType">
	<annotation><documentation>
		Monday=1, Tuesday=2, ..., Saturday=6, Sunday=7
	</documentation></annotation>
	<restriction base="integer">
	  <minInclusive value="1"/>
	  <maxInclusive value="7"/>
	</restriction>
</simpleType>

<simpleType name="directionType">
	<restriction base="string">
		<enumeration value="+"/>
		<enumeration value="-"/>
	</restriction>
</simpleType>

<simpleType name="nthType">
	<restriction base="string">
		<enumeration value="1"/>
		<enumeration value="2"/>
		<enumeration value="3"/>
		<enumeration value="4"/>
		<enumeration value="last"/>
	</restriction>
</simpleType> 

</schema>